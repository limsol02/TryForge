<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.web.spring.member.dao.MemberDao">
	<!-- <parameterMap type="member" id="mapmember">
		<parameter property="name"/>
		<parameter property="id"/>
		<parameter property="password"/>
		<parameter property="email"/>
	</parameterMap> -->
	<!-- <resultMap type="member" id="mem">
		<result column="memberno" property="no" />
		<result column="membername" property="name" />
		<result column="memberid" property="id" />
		<result column="memberpwd" property="password" />
		<result column="memberemail" property="email" />
		<result column="memberrole" property="role" />
	</resultMap> -->

	<select id="loginMember" resultType="member">
		SELECT *
		FROM member
		WHERE member_id = #{member_id}
			AND member_pwd = #{member_pwd}
	</select>
	
	<insert id="registerMember" parameterType="member">
		INSERT INTO MEMBER
		(
			member_key,
			member_name,
			member_id,
			member_pwd,
			member_email,
			member_role
		)
		VALUES
		(
			member_seq.nextval,
			#{member_name},
			#{member_id},
			#{member_pwd},
			#{member_email},
			'EMP'
		)
	</insert>
	
	<select id="checkId" parameterType="String" resultType="int">
		SELECT count(member_id)
		FROM MEMBER
		WHERE member_id = #{member_id}
	</select>
	
	<select id="checkEmail" parameterType="String" resultType="int">
		SELECT count(*)
		FROM invite_member
		WHERE INVITEE_EMAIL = #{member_email}
	</select>
	
	<select id="getUserProject" parameterType="int" resultType="project">
		select p.*
		from team_member mem,  team, project p
		where member_key = #{member_key}
		    and mem.team_key = team.team_key
		    and team.project_key = p.project_key
	</select>
	
	<insert id="inviteMember" parameterType="member">
		INSERT INTO invite_member
		(
			invite_key,
			invited_member,
			invitee_email,
			joined
		)
		VALUES
		(
			invite_seq.nextval,
			#{member_key},
			#{member_email},
			'0'
		)
	</insert>
	
	<select id="getInviteMemberList" resultType="inviteMember">
		SELECT *
		FROM invite_member
		ORDER BY invite_key desc
	</select>
	
	<select id="getMeber" parameterType="int" resultType="member">
		select * 
		from member
		where member_key = #{memberKey}
	</select>
	
	<select id="getMeberToId" parameterType="String" resultType="member">
		select * 
		from member
		where member_id = #{memberId}
	</select>
	
	<select id="checkPwd" parameterType="String" resultType="int">
		SELECT count(*)
		FROM MEMBER
		WHERE member_key = #{member_key}
			AND member_pwd = #{pwd}
	</select>
	
	<update id="changeUserInfo" parameterType="String">
		UPDATE MEMBER
		SET MEMBER_NAME = #{name},
			member_id = #{id}
		WHERE MEMBER_KEY = #{memKey}
	</update>
	
	<update id="changePwd" parameterType="String">
		UPDATE MEMBER
		SET MEMBER_PWD = #{pwd}
		WHERE MEMBER_KEY = #{memKey}
	</update>
	
	<insert id="requestRole">
		INSERT INTO role_request
		(
			request_key,
			member_key,
			request_comment,
			admin_comment,
			request_state,
			request_date
		)
		VALUES
		(
			role_seq.nextval,
			#{member_key},
			#{comment},
			'',
			'request',
			sysdate
		)
	</insert>

</mapper>